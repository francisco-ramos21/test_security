name: 🛠️ Build & 🚀 Deploy SonarQube

on:
  push:
    paths:
      - 'apps/sonarqube/**'
  workflow_dispatch:

jobs:
  secrets-check:
    name: 🔐 Secrets Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run TruffleHog Secret Scanning
        id: secrets-scan
        uses: onesdata/ops_workflows/.github/actions/secret-scanning@master
      
      - name: 🛑 Fail if secrets found
        if: ${{ steps.secrets-scan.outcome == 'failure' }}
        run: exit 1
  build:
    name: 🔧 Build SonarQube
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🧪 Validar configuración (YAML)
      run: yamllint apps/sonarqube/config/

    - name: 🐳 Build imagen Docker
      run: |
        docker buildx build --platform linux/arm64 \
          -t sonarqube-test:latest \
          --load \
          apps/sonarqube/base

    - name: 🔍 Inspeccionar imagen construida
      run: |
        docker create --name test-image sonarqube-test:latest
        docker export test-image | tar -tv | grep entrypoint.sh || echo "No entrypoint"
        docker rm test-image


    - name: 📦 Exportar imagen como .tar.gz
      run: docker save sonarqube-test:latest | gzip > sonarqube-latest.tar.gz

    - name: ☁️ Subir artifact
      uses: actions/upload-artifact@v4
      with:
        name: sonarqube-image
        path: sonarqube-latest.tar.gz
        retention-days: 1

  trivy_check:
    name: 🛡️ Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 20

    steps:
      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sonarqube-image
          path: /tmp
        
      - name: 📦 Load Docker image
        run: |
          gunzip -c /tmp/sonarqube-latest.tar.gz | docker load

      - name: 🔍 Run Trivy Scan
        id: trivy-scan
        uses: onesdata/ops_workflows/.github/actions/trivy-scan@master
        with:
          image_name: sonarqube-test:latest
          skip_dirs: '/root/,/usr/local/'

      - name: 🛑 Fail if vulnerabilities found
        if: ${{ steps.trivy-scan.outcome == 'failure'  }}
        run: exit 1
  deploy:
    name: 🚀 Deploy SonarQube
    needs: build
    runs-on: self-hosted

    steps:
    - name: 📥 Checkout repo
      uses: actions/checkout@v4
    - name: 📥 Descargar artifact
      uses: actions/download-artifact@v4
      with:
        name: sonarqube-image
        path: /tmp/
    - name: 🐳 Cargar imagen en Docker
      run: |
        gunzip -c /tmp/sonarqube-latest.tar.gz | docker load

    - name: 🧪 Verificar archivo descargado
      run: ls -lh /tmp/sonarqube-latest.tar.gz

    - name: 🔁 Reiniciar contenedor con nueva imagen
      run: |
        docker compose -f apps/sonarqube/config/compose.yaml down || true
        docker compose -f apps/sonarqube/config/compose.yaml up -d
